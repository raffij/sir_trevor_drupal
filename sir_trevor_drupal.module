<?php

/**
 * @file
 * Implements the necessary hooks for the editor to work properly.
 */

function sir_trevor_drupal_init() {
  libraries_load('underscore');
  drupal_add_library('underscore', 'underscore');
}

/**
 * Implements hook_permission().
 */
function sir_trevor_drupal_permission() {
  return array(
    'administer sir trevor drupal' => array(
      'title' => t('Administer Sir Trevor Drupal'),
      'restrict access' => TRUE,
    ),
  );
}

function sir_trevor_drupal_menu() {
  $items = array();

  $items['sir_trevor_drupal/tweet_fetch/%'] = array(
    'page callback' => 'sir_trevor_drupal_fetch_tweet',
    'page arguments' => array(2),
    'access arguments' => array('administer sir trevor drupal'),
    'type' => MENU_NORMAL_ITEM
  );

  $items['admin/config/content/sir_trevor_drupal'] = array(
    'title' => 'Sir Trevor Drupal',
    'description' => 'Configuration for Sir Trevor Drupal module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sir_trevor_drupal_form'),
    'access arguments' => array('administer sir trevor drupal'),
    'type' => MENU_NORMAL_ITEM
  );

  return $items;
}

function sir_trevor_drupal_form($form, &$form_state) {
  $form['sir_trevor_drupal_twitter_oauth_access_token'] = array(
    '#type' => 'textfield',
    '#title' => t('Twitter oauth access token'),
    '#default_value' => variable_get('sir_trevor_drupal_twitter_oauth_access_token', ''),
    '#size' => 60,
    '#description' => t('The twitter oauth access token from dev.twitter.com')
  );
  $form['sir_trevor_drupal_twitter_oauth_access_token_secret'] = array(
    '#type' => 'textfield',
    '#title' => t('Twitter oauth access token secret'),
    '#default_value' => variable_get('sir_trevor_drupal_twitter_oauth_access_token_secret', ''),
    '#size' => 60,
    '#description' => t('The twitter oauth access token secret from dev.twitter.com')
  );
  $form['sir_trevor_drupal_twitter_consumer_key'] = array(
    '#type' => 'textfield',
    '#title' => t('Twitter consumer key'),
    '#default_value' => variable_get('sir_trevor_drupal_twitter_consumer_key', ''),
    '#size' => 60,
    '#description' => t('The twitter consumer key from dev.twitter.com')
  );
  $form['sir_trevor_drupal_twitter_consumer_secret'] = array(
    '#type' => 'textfield',
    '#title' => t('Twitter consumer secret'),
    '#default_value' => variable_get('sir_trevor_drupal_twitter_consumer_secret', ''),
    '#size' => 60,
    '#description' => t('The twitter consumer secret from dev.twitter.com')
  );

  return system_settings_form($form);
}

/**
 * Implements hook_element_info().
 */
function sir_trevor_drupal_element_info() {
  $elements['textarea']['#process'] = array('sir_trevor_drupal_textarea');
  return $elements;
}

/**
 * Integrate the editor into a textarea element.
 */
function sir_trevor_drupal_textarea($element, $form_state) {
  static $found = false;
  if ($element['#id'] == 'edit-body-und-0-value') {
    $element['#attributes']['class'][] = 'sir-trevor-js';
    if (!$found) {
      $settings = array();
      $path = _sir_trevor_drupal_get_path();
      drupal_add_css($path . '/js/sir-trevor-js/sir-trevor.css');
      drupal_add_css($path . '/js/sir-trevor-js/sir-trevor-icons.css');
      drupal_add_js($path . '/js/Eventable/eventable.js', array('weight' => 2));
      drupal_add_js($path . '/js/sir-trevor-js/sir-trevor.min.js', array('weight' => 3));

      drupal_add_js($path . '/init.js', array('weight' => 4));

      if (module_invoke('imce', 'access')) {
        $settings['sir_trevor_drupal']['imceURL'] = url('imce');
      }

      drupal_add_js($settings, 'setting');
    }
  }
  return $element;
}

/**
 * Implement hook_filter_info().
 */
function sir_trevor_drupal_filter_info() {
  $filters['sir_trevor_js'] = array(
    'title' => t('Sir Trevor Js filter'),
    'description' => t('Deals with rendering of Sir Trevor Json'),
    'prepare callback' => '_sir_trevor_drupal_prepare',
    'process callback' => '_sir_trevor_drupal_process',
    'tips callback' => '_sir_trevor_drupal_tips',
  );
  return $filters;
}

function _sir_trevor_drupal_prepare($text, $format) {
  return $text;
}

function _sir_trevor_drupal_process($text, $format) {
  $path = _sir_trevor_drupal_get_path();

  require_once( $path."/lib/Markdown.php" );

  $data = json_decode($text, true);
  $blocks = $data['data'];
  $output = "";
  if (is_array($blocks)) {
    foreach($blocks as $block) {
      $filename = path_to_theme()."/blocks/".$block['type'].".php";
      if (!file_exists($filename)) {
        $filename = $path."/blocks/".$block['type'].".php";
      }
      if (file_exists($filename)) {
        ob_start();
        $block = $block['data'];
        require $filename;
        $output .= ob_get_clean();
      }
    }
    return $output;
  }
  return $text;
}

function _sir_trevor_drupal_tips($format, $long = FALSE) {
  return t('Use this to render sir trevor json within a node');
}

function _sir_trevor_drupal_get_path() {
  return drupal_get_path('module', 'sir_trevor_drupal');
}

function sir_trevor_drupal_fetch_tweet($id) {
  $path = _sir_trevor_drupal_get_path();

  require_once( $path."/lib/TwitterApiExchange.php" );

  $settings = array(
      'oauth_access_token' => variable_get('sir_trevor_drupal_twitter_oauth_access_token'),
      'oauth_access_token_secret' => variable_get('sir_trevor_drupal_twitter_oauth_access_token_secret'),
      'consumer_key' => variable_get('sir_trevor_drupal_twitter_consumer_key'),
      'consumer_secret' => variable_get('sir_trevor_drupal_twitter_consumer_secret')
  );

  $url = 'https://api.twitter.com/1.1/statuses/show.json';
  $getfield = '?id='.$id;
  $requestMethod = 'GET';
  $twitter = new TwitterAPIExchange($settings);
  $response = $twitter->setGetfield($getfield)
               ->buildOauth($url, $requestMethod)
               ->performRequest();

  print $response;
  exit();
}
